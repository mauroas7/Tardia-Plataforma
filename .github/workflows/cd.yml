# .github/workflows/cd.yml
name: CD - Deploy to Kubernetes

on:
  workflow_run:
    workflows: ["CI - Build and Push Images"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download deployment artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Load deployment info
        id: deploy_info
        run: |
          IMAGE_TAG=$(cat image_tag.txt)
          BRANCH_NAME=$(cat branch_name.txt)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Set up Kubeconfig
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG_BASE64 }}

      - name: Apply Kubernetes Namespace
        run: kubectl apply -f k8s/namespace.yaml

      - name: Create/Update Kubernetes Secrets
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          kubectl create secret generic app-secrets --from-literal=jwt-secret="$JWT_SECRET" --from-literal=mongodb-uri="$MONGODB_URI" --namespace=bot-platform --dry-run=client -o yaml | kubectl apply -f -
          kubectl create secret generic bot-secrets --from-literal=weather-api-key="$WEATHER_API_KEY" --from-literal=news-api-key="$NEWS_API_KEY" --from-literal=gemini-api-key="$GEMINI_API_KEY" --namespace=bot-platform --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy to Kubernetes
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
        run: |
          sed -i "s|image: YOUR_DOCKER_REGISTRY/backend:PLACEHOLDER_TAG|image: $DOCKER_REGISTRY/backend:${{ steps.deploy_info.outputs.IMAGE_TAG }}|g" k8s/deployment.yaml
          sed -i "s|image: YOUR_DOCKER_REGISTRY/frontend:PLACEHOLDER_TAG|image: $DOCKER_REGISTRY/frontend:${{ steps.deploy_info.outputs.IMAGE_TAG }}|g" k8s/frontend.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/frontend.yaml

      - name: Wait for deployments
        run: |
          kubectl wait --for=condition=available --timeout=300s deployment/backend -n bot-platform
          kubectl wait --for=condition=available --timeout=180s deployment/frontend -n bot-platform

      - name: Show Deployment Status
        run: kubectl get all -n bot-platform
