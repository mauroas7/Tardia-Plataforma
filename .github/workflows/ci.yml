# .github/workflows/ci.yml
name: CI - Build and Push Images

on:
  push:
    branches:
      - develop
      - test
      - main
  workflow_dispatch:

env:
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine image tag
        id: image_tag
        run: |
          BRANCH_NAME=$(echo "${{ github.ref_name }}")
          COMMIT_SHA_SHORT=$(echo "${{ github.sha }}" | cut -c1-7)
          IMAGE_TAG=""
          if [ "$BRANCH_NAME" == "main" ]; then
            IMAGE_TAG="latest"
          elif [ "$BRANCH_NAME" == "test" ]; then
            IMAGE_TAG="test-$COMMIT_SHA_SHORT"
          else
            IMAGE_TAG="develop-$COMMIT_SHA_SHORT"
          fi
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Build and push Backend image
        run: |
          docker build -t ${{ env.DOCKER_REGISTRY }}/backend:${{ steps.image_tag.outputs.IMAGE_TAG }} ./backend
          docker push ${{ env.DOCKER_REGISTRY }}/backend:${{ steps.image_tag.outputs.IMAGE_TAG }}

      # --- INICIO DE LA CORRECCIÓN ---
      - name: Build and push Frontend image
        run: |
          # Cambiamos el comando de construcción:
          # -f ./frontend/Dockerfile -> Especifica qué Dockerfile usar.
          # . -> Le dice a Docker que el contexto es la raíz del proyecto.
          docker build -t ${{ env.DOCKER_REGISTRY }}/frontend:${{ steps.image_tag.outputs.IMAGE_TAG }} -f ./frontend/Dockerfile .
          docker push ${{ env.DOCKER_REGISTRY }}/frontend:${{ steps.image_tag.outputs.IMAGE_TAG }}
      # --- FIN DE LA CORRECCIÓN ---

      - name: Create deployment artifact
        run: |
          mkdir -p deployment-info
          echo "${{ steps.image_tag.outputs.IMAGE_TAG }}" > deployment-info/image_tag.txt
          echo "${{ steps.image_tag.outputs.BRANCH_NAME }}" > deployment-info/branch_name.txt
      - name: Upload deployment artifact
        uses: actions/upload-artifact@v4
        with:
          name: deployment-info
          path: deployment-info/
