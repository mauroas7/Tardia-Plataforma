apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: bot-platform
  labels:
    app: backend
    tier: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        tier: api
    spec:
      containers:
      - name: backend
        image: YOUR_DOCKER_REGISTRY/backend:PLACEHOLDER_TAG
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        # Variables de aplicaci√≥n
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: KUBERNETES_NAMESPACE
          value: "bot-platform"
        
        # MongoDB desde app-secrets
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: mongodb-uri
        
        # API Keys desde bot-secrets
        - name: WEATHER_API_KEY
          valueFrom:
            secretKeyRef:
              name: bot-secrets
              key: weather-api-key
        
        - name: NEWS_API_KEY
          valueFrom:
            secretKeyRef:
              name: bot-secrets
              key: news-api-key
        
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: bot-secrets
              key: gemini-api-key
        
        # JWT_SECRET (comentado hasta que lo agregues a GitHub)
        # - name: JWT_SECRET
        #   valueFrom:
        #     secretKeyRef:
        #       name: app-secrets
        #       key: jwt-secret
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: app-logs
        emptyDir: {}
      serviceAccountName: bot-creator-account
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: bot-platform
spec:
  selector:
    app: backend
  ports:
  - port: 80
    targetPort: 3000
  type: ClusterIP
